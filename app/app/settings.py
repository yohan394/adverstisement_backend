"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', '$d5c5h&vkazayd$nevzv2%xrexgv9jv0rauzx(+ue^-0)##&ly')


# DEV OR PROD
APPLICATION_STAGE_KEY = 'APPLICATION_STAGE_KEY'
STAGE_OF_DEVELOPING = 'STAGE_OF_DEVELOPING'
STAGE_OF_PRODUCTION = 'STAGE_OF_PRODUCTION'

APPLICATION_STAGE = os.environ.get(APPLICATION_STAGE_KEY, STAGE_OF_DEVELOPING)

DOCKER_PRODUCTION_DATABASE = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS': {
            'db': 'app_grouptango',
            'user': 'root',
            'password': 'master_root_password',
            'host': 'mariadb-master',
            'port': 3306,
        },
    }
}

LOCAL_PRODUCTION_DATABASE = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS': {
            'database': 'advertisement',
            'user': 'root',
            'password': 'dkffkah1!',
            'host': '172.30.1.45',
            'port': 3306,
        },
    }
}

DEVELOPMENT_DATABASE = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS': {
            'database': 'advertisement',
            'user': 'root',
            'password': 'ubicus1!2@',
            'host': '127.0.0.1',
            'port': 3306,
        },
    }
}

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(os.environ.get('DEBUG', 1)))

ALLOWED_HOSTS = [
]

ALLOWED_HOSTS_ENV = os.environ.get('ALLOWED_HOSTS')
if ALLOWED_HOSTS_ENV:
    ALLOWED_HOSTS.extend(ALLOWED_HOSTS_ENV.split(','))

# Application definition
INSTALLED_APPS = [
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'index.apps.IndexConfig',
    'dashboard.apps.DashboardConfig',
    'client.apps.ClientConfig',
    'commercial.apps.CommercialConfig',
    'treasure.apps.TreasureConfig',
    'user.apps.UserConfig',
    'django.contrib.auth',
    'django.contrib.admin',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
DATABASE_URL = os.getenv('DATABASE_URL')

# LOCAL_PRODUCTION_DATABASE, DOCKER_PRODUCTION_DATABASE, DEVELOPMENT_DATABASE
if APPLICATION_STAGE == STAGE_OF_DEVELOPING:
    DATABASES = DEVELOPMENT_DATABASE
else:
    DATABASES = LOCAL_PRODUCTION_DATABASE

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/static/'
STATIC_ROOT = '/vol/web/static'


DEVELOPMENT_MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
DEVELOPMENT_MEDIA_URL = '/media/'

PRODUCTION_MEDIA_ROOT = '/vol/web/media'
PRODUCTION_MEDIA_URL = '/static/media/'


if APPLICATION_STAGE == STAGE_OF_DEVELOPING:
    MEDIA_ROOT = DEVELOPMENT_MEDIA_ROOT
    MEDIA_URL = DEVELOPMENT_MEDIA_URL
else:
    MEDIA_ROOT = PRODUCTION_MEDIA_ROOT
    MEDIA_URL = PRODUCTION_MEDIA_URL


LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'


# SMTP SETTINGS
EMAIL_USE_TLS = True
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_PASSWORD='tmdduq1212@'
EMAIL_HOST_USER='tango@tango.ink'
EMAIL_PORT = 587
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
